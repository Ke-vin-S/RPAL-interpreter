//let f x y = x + -3
//in Print(f 3 (1))//
//Print (Inc 7, true) where Inc x = x + 1
//(fn x y. x + y) 2 3
//Print(1 ** 3 *2, 'csaa')
//Print(1 ** 3 **2, 'csaa')
//let a = 2 and b = 5 and c =3 in Print(x + y)
//let c=3 within x = c within f x = x + c in Print(f 3)
//let a = nil aug 5 aug 2 in Print(a)
//let f x y z = x + y + z in f 1 2 3
//Print(not -3 + 5 /3 > 1)
//let f x y = x + y in 3 @f y
//Print((2, 3) 1)
//(fn n.n < 0 -> -n | n)(-3)
//(fn (x,y).x+y)(5,6)
//let rec f n = n eq 1 -> 1 | n * f (n -1) in f 3
//let rec f n = n eq 1 -> 1 | n * f (n -1) in f 3
//Print(1,2,3,3)
//let a = 3 and b = 2 in Print(a,b, 3)
//Print(not -3 + 5 /3 > 1)
//let rec f n = n eq 1 -> 1 | n * f (n -1) in f 3
//let f x y = x + 3 in Print(f 3 1)
//Print(x+3)
f x y = x
in Print(f 3 (1))

